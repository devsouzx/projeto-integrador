definitions:
  request.CadastroRequest:
    properties:
      cartaosus:
        type: string
      cpf:
        type: string
      datadenascimento:
        type: string
      email:
        type: string
      endereco:
        $ref: '#/definitions/request.EnderecoRequest'
      nomecompleto:
        type: string
      nomecompletodamae:
        type: string
      senha:
        type: string
      telefone:
        type: string
    required:
    - cartaosus
    - cpf
    - datadenascimento
    - email
    - nomecompleto
    - nomecompletodamae
    - senha
    - telefone
    type: object
  request.EnderecoRequest:
    properties:
      bairro:
        type: string
      cep:
        type: string
      cidade:
        type: string
      complemento:
        type: string
      logradouro:
        type: string
      numero:
        type: string
      uf:
        type: string
    type: object
  request.LoginRequest:
    properties:
      identificador:
        type: string
      password:
        type: string
      role:
        type: string
    type: object
  response.LoginResponse:
    properties:
      message:
        type: string
      redirect:
        type: string
      token:
        type: string
      user:
        $ref: '#/definitions/response.UserResponse'
    type: object
  response.UserResponse:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
      role:
        type: string
    type: object
info:
  contact: {}
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Realiza o login de um usuário e retorna um token JWT
      parameters:
      - description: Credenciais de login
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.LoginResponse'
        "400":
          description: Erro na validação dos dados
          schema:
            type: object
        "401":
          description: Credenciais inválidas
          schema:
            type: object
        "403":
          description: Conta não verificada
          schema:
            type: object
        "500":
          description: Erro interno do servidor
          schema:
            type: object
      summary: Login de usuário
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Cria uma nova conta de usuário
      parameters:
      - description: Dados do usuário
        in: body
        name: userData
        required: true
        schema:
          $ref: '#/definitions/request.CadastroRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Usuário cadastrado com sucesso
          schema:
            type: object
        "400":
          description: Dados inválidos
          schema:
            type: object
        "500":
          description: Erro interno do servidor
          schema:
            type: object
      summary: Cadastrar novo usuário
      tags:
      - auth
swagger: "2.0"
